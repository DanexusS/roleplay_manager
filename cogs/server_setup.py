import asyncio
import random
from pafy import new as make_new_video
from datetime import datetime

from nextcord.ext import commands
from nextcord import Interaction, FFmpegPCMAudio
from nextcord.utils import get

from constants import *
from cogs.trade import add_item


FFMPEG_OPTIONS = {
    'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5 -stream_loop -1',
    'options': '-vn'
}
VIDEO_LINK = "https://www.youtube.com/watch?v=z_HWtzUHm6s&t=1s"

NATION_TITLES = ['–°–µ–≤–µ—Ä—è–Ω–µ', '–Æ–∂–∞–Ω–µ', '–¢–µ—Ö–Ω–æ-–≥–∏–∫–∏']
ORIGIN_TITLES = ['–ë–æ–≥–∞—Ç–∞—è —Å–µ–º—å—è', '–û–±—ã—á–Ω–∞—è —Å–µ–º—å—è', '–ë–µ–¥–Ω–∞—è —Å–µ–º—å—è']

GAME_ROLES_COLORS = {
    "–ò–≥—Ä–æ–∫": 44444,
    "–¢–æ–ø–æ–ª–∏—Å": 16777215,
    "–ë—Ä–∞–∏—Ñ–∞—Å—Ç": 16777215,
    "–î–∂–∞–¥–∏—Ñ—Ñ": 16777215
}
OBJECTS = json.load(open("json_data/objects.json", encoding="utf8"))

TIME_STORE_UPDATE = "18:00"
STORE_TYPES = json.load(open("json_data/store_types.json", encoding="utf8"))


class NationButton(nextcord.ui.Button):
    def __init__(self, bot, title):
        super().__init__(style=nextcord.ButtonStyle.gray, emoji=bot.get_emoji(EMOJIS_ID[title]))
        self.title = title

    async def callback(self, interaction: Interaction):
        user_id = f"{interaction.user.id}-{interaction.guild.id}"

        user = db_sess.query(User).filter(User.id == user_id).first()
        user.nation = self.title

        await interaction.send(f"*–¢–µ–ø–µ—Ä—å –≤—ã –ø—Ä–µ–Ω–∞–¥–ª–µ–∂–∏—Ç–µ —Ä–∞—Å–µ **{self.title}**!* [–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å]")
        db_sess.commit()


class NationView(nextcord.ui.View):
    def __init__(self, bot):
        super().__init__(timeout=None)

        for title in NATION_TITLES:
            self.add_item(NationButton(bot, title))


class OriginButton(nextcord.ui.Button):
    def __init__(self, bot, title):
        super().__init__(style=nextcord.ButtonStyle.gray, emoji=bot.get_emoji(EMOJIS_ID[title]))
        self.title = title

    async def callback(self, interaction: Interaction):
        user = db_sess.query(User).filter(User.id == f"{interaction.user.id}-{interaction.guild.id}").first()
        user.origin = self.title

        await interaction.send(f"*–¢–µ–ø–µ—Ä—å –≤—ã –∏–∑ \"**{self.title}**\"!* [–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å]")
        db_sess.commit()


class OriginView(nextcord.ui.View):
    def __init__(self, bot):
        super().__init__(timeout=None)

        for title in ORIGIN_TITLES:
            self.add_item(NationButton(bot, title))


class ShopButton(nextcord.ui.Button):
    def __init__(self, bot, item_name):
        super().__init__(
            style=nextcord.ButtonStyle.gray,
            label=f"–ö—É–ø–∏—Ç—å {item_name}"
        )
        self.item_name = item_name
        self.bot = bot

    async def callback(self, interaction: Interaction):
        user = interaction.user
        guild = interaction.guild

        value_emoji = self.bot.get_emoji(EMOJIS_ID["–í–∞–ª—é—Ç–∞"])
        item = db_sess.query(Items).filter(Items.name == self.item_name).first()
        user = db_sess.query(User).filter(User.id == f"{user.id}-{guild.id}").first()

        if user.balance < item.price:
            await interaction.send(f"***–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∏–ª–æ –¥–µ–Ω–µ–≥**! –í–∞—à –±–∞–ª–∞–Ω—Å: {user.balance} {value_emoji}* "
                                   f"[–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å]")
        else:
            user.balance -= item.price
            await add_item(guild, user.id, self.item_name)
            await interaction.send(f"*–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ **{self.item_name}**! –í–∞—à –±–∞–ª–∞–Ω—Å: {user.balance} {value_emoji}* "
                                   f"[–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å]")

        db_sess.commit()


class ShopView(nextcord.ui.View):
    def __init__(self, bot, items):
        super().__init__()

        for item in items:
            self.add_item(ShopButton(bot, item.name))


class ServerSetupCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    # –§–£–ù–ö–¶–ò–Ø, –æ–±–Ω–æ–≤–ª—è—é—â–∞—è –º–∞–≥–∞–∑–∏–Ω
    async def store_update(self, guild):
        store_channel = get(guild.channels, name="üõí–º–∞–≥–∞–∑–∏–Ω")
        if store_channel:
            # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
            await store_channel.purge(limit=None)

            # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
            all_items = db_sess.query(Items).all()
            for item_type in STORE_TYPES:
                # –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
                items = list(filter(lambda x: x.type in item_type.keys(), all_items.copy()))
                random.shuffle(items)
                items = items[:random.randint(4, 6)]

                # Embed —Å–æ–æ–±—â–µ–Ω–∏—è
                embed = nextcord.Embed(title=f"‚ÆÆ __**{item_type['NAME']}:**__", color=0xf1c40f)
                for item in items:
                    embed.add_field(
                        name=f"**{item.name}:**",
                        value=f"‚û¢ **–¶–µ–Ω–∞:** {item.price} {self.bot.get_emoji(EMOJIS_ID['–í–∞–ª—é—Ç–∞'])}"
                              f"```fix\n–û–ø–∏—Å–∞–Ω–∏–µ: {item.description} –¢–∏–ø: {item_type[item.type]}```", inline=False
                    )

                # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–µ
                shop_view = ShopView(self.bot, items)

                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                await store_channel.send(embed=embed, view=shop_view)

    # –§–£–ù–ö–¶–ò–Ø, –ø—Ä–æ–≤–µ—Ä—è—é—â–∞—è –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω
    async def store_update_cycle(self):
        while True:
            if datetime.now().strftime("%H:%M") == TIME_STORE_UPDATE:
                for guild in self.bot.guilds:
                    await self.store_update(guild)
            await asyncio.sleep(60)

    # –§–£–ù–ö–¶–ò–Ø, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–∞–Ω–∞–ª—É "üé∂–ì–ª–∞–≤–Ω–∞—è —Ç–µ–º–∞" –Ω–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö
    async def channel_connection(self):
        for guild in self.bot.guilds:
            voice_channel = get(guild.voice_channels, name="üé∂–ì–ª–∞–≤–Ω–∞—è —Ç–µ–º–∞")
            if voice_channel:
                try:
                    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–∞–Ω–∞–ª—É
                    voice = await voice_channel.connect()
                    # –í–∫–ª—é—á–µ–Ω–∏–µ –º—É–∑—ã–∫–∏
                    video = make_new_video(VIDEO_LINK)
                    audio = video.getbestaudio().url
                    voice.play(FFmpegPCMAudio(audio, **FFMPEG_OPTIONS, executable="ffmpeg/bin/ffmpeg.exe"))
                except Exception as e:
                    print(e)

    # –§–£–ù–ö–¶–ò–Ø, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—é —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    async def send_registration_msg(self, channel):
        await channel.send(f"**–í —ç—Ç–æ–º —á–∞—Ç–µ –≤—ã –¥–æ–ª–∂–Ω—ã —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.**\n"
                           f"*–ü–æ–¥—Ö–æ–¥–∏—Ç–µ –∫ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É —Å —É–º–æ–º!*")

        # ======= –í–´–ë–û–† –†–ê–°–´
        nation_embed = nextcord.Embed(title='‚ÆÆ __**–í—ã–±–æ—Ä —Ä–∞—Å—ã:**__', color=44444)
        nation_embed.add_field(
            name='**–í–∞–∂–Ω–æ:**',
            value='*```yaml\n'
                  '‚û¢ –û—Ç —Ä–∞—Å—ã –∑–∞–≤–∏—Å—è—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏.\n'
                  '‚û¢ –ü–æ–∫–∞ –≤—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤—ã–±–∏—Ä–∞—Ç—å —Ä–∞—Å—É.```*',
            inline=False)

        # ======= –í–´–ë–û–† –ü–†–û–ò–°–•–û–ñ–î–ï–ù–ò–Ø
        origin_embed = nextcord.Embed(title='‚ÆÆ __**–í—ã–±–æ—Ä –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è:**__', color=44444)
        origin_embed.add_field(
            name='**–í–∞–∂–Ω–æ:**',
            value='*```yaml\n'
                  '‚û¢ –û—Ç –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è –∑–∞–≤–∏—Å—è—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏.\n'
                  '‚û¢ –ü–æ–∫–∞ –≤—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤—ã–±–∏—Ä–∞—Ç—å –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ.```*',
            inline=False
        )

        # ======= –°–û–ó–î–ê–ù–ò–ï –ò–ú–ï–ù–ò
        name_embed = nextcord.Embed(title='‚ÆÆ __**–í–∞—à–µ –∏–º—è:**__', color=44444)
        name_embed.add_field(
            name='**–í–∞–∂–Ω–æ:**',
            value='*```yaml\n'
                  '‚û¢ –ñ–µ–ª–∞–µ–º–æ–µ –≤–∞–º–∏ –∏–º—è –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –¥–∞–Ω–Ω—ã–π —á–∞—Ç —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã: "/name".\n'
                  '‚û¢ –ò–º—è –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –ø—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏.\n'
                  '‚û¢ –í–≤–æ–¥–∏—Ç–µ –∏–º—è —Å —É–º–æ–º —Ç–∞–∫ –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∞.\n'
                  '‚û¢ –ü–æ—Å–ª–µ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏–º–µ–Ω–∏ –≤—ã –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è.```*',
            inline=False
        )

        await channel.send(embed=nation_embed, view=NationView(self.bot))
        await channel.send(embed=origin_embed, view=OriginView(self.bot))
        await channel.send(embed=name_embed)

    # –§–£–ù–ö–¶–ò–Ø, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—é —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    @staticmethod
    async def send_information_msg(channel):
        # ======= –ò—Å—Ç–æ—Ä–∏—è
        text = '*```yaml\n' \
               '\t–û–∫–æ–ª–æ –≤–µ–∫–∞ –Ω–∞–∑–∞–¥ —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–æ —Å–º–æ–≥–ª–æ –ø–æ–∫–∏–Ω—É—Ç—å –ó–µ–º–ª—é –∏ –æ—Å–≤–æ–∏—Ç—å –ú–∞—Ä—Å, ' \
               '–Ω–∞ –Ω—ë–º –ª—é–¥–∏ –Ω–∞—à–ª–∏ —Ä—É–¥—É –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≠–∫–∑–æ—Ä–∏–π. –õ—é–¥–∏ —Ç—â–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∞–ª–∏ –≠–∫–∑–æ—Ä–∏–π, ' \
               '–∏ –æ—Ç–∫—Ä—ã–ª–∏ –¥–ª—è —Å–µ–±—è –º–Ω–æ–≥–æ —Ä–∞–∑–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ —ç—Ç–æ–π —Ä—É–¥—ã, –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –º–Ω–æ–≥–∏—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ ' \
               '–ª—é–¥–∏ —Å–º–æ–≥–ª–∏ –∏–∑–≤–ª–µ–∫–∞—Ç—å –∏–∑ —ç—Ç–æ–π —Ä—É–¥—ã –º–Ω–æ–≥–æ —ç–Ω–µ—Ä–≥–∏–∏ —Å –æ–≥—Ä–æ–º–Ω–æ–π –º–æ—â—å—é. –í —Ö–æ–¥–µ —Ç–∞–∫–∏—Ö ' \
               '–æ—Ç–∫—Ä—ã—Ç–∏–π –ª—é–¥–∏ —Å–º–æ–≥–ª–∏ –±—ã—Å—Ç—Ä–æ —Ä–∞–∑–≤–∏—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –æ—Å–≤–æ–∏—Ç—å –∫–æ—Å–º–æ—Å –Ω–∞–º–Ω–æ–≥–æ –ª—É—á—à–µ, ' \
               '—á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–æ —Å—Ç–∞–ª–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –∏ –∫–æ–ª–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–ª–∞–Ω–µ—Ç—ã –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö ' \
               '–∑–≤—ë–∑–¥–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö.\n\n' \
               '\t–ó–µ–º–ª—è –≤ —Å–≤–æ—ë –≤—Ä–µ–º—è, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é —Å—Ç–∞–ª–∞ –¥–µ–≥—Ä–∞–¥–∏—Ä–æ–≤–∞—Ç—å, –∏–∑ –∑–∞ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ ' \
               '–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–æ–¥–∏–ª–∏ –Ω–∞ –ó–µ–º–ª–µ –∏ –ª—é–¥–µ–π –æ—Ç–≤–µ—Ä–≥–∞—é—â–∏—Ö –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —Ä–æ–¥–Ω–∞—è –ø–ª–∞–Ω–µ—Ç–∞ ' \
               '—á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è —Å—Ç–∞–ª–∞ —Å–∫–≤–µ—Ä–Ω—ã–º –º–µ—Å—Ç–æ–º. –ù–∞ –ó–µ–º–ª—é —Å—Ç–∞–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å ' \
               '–Ω–µ—É–≥–æ–¥–Ω—ã—Ö –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–≤–µ—Ä—à–∞–ª–∏ –∫–∞–∫–∏–µ –ª–∏–±–æ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ. –£–∂–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–∫–æ–ª–µ–Ω–∏–π –ª—é–¥–∏ ' \
               '—Å –ø–ª–∞–Ω–µ—Ç—ã –ó–µ–º–ª—è –∂–∏–≤—É—Ç –≤ —É–∂–∞—Å–Ω–æ–º –º–∏—Ä–µ —ç—Ç–æ–π –ø–ª–∞–Ω–µ—Ç—ã. –í—ã —Ä–æ–¥–∏–ª–∏—Å—å –Ω–∞ –ó–µ–º–ª–µ, –∏ –≤–∞–º ' \
               '–ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –Ω–∞ –Ω–µ–π –≤—ã–∂–∏—Ç—å.```*'
        history_embed = nextcord.Embed(title='‚ÆÆ __**–ò—Å—Ç–æ—Ä–∏—è:**__', color=44444)
        history_embed.add_field(name='\u200b', value=text, inline=False)

        # ======= –ò–Ω—Ñ–æ
        embed = nextcord.Embed(title='‚ÆÆ __**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**__', color=44444)
        embed.add_field(
            name='\u200b',
            value='*```yaml\n'
                  '‚û¢ –î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç–µ "/", –≤–∞–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—Å—è '
                  '—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Å –∏—Ö –æ–ø–∏—Å–∞–Ω–∏—è–º–∏.\n'
                  '‚û¢ –û—Å–Ω–æ–≤–Ω–∞—è –≤–∞–ª—é—Ç–∞ –∏–≥—Ä—ã: "Gaudium".\n'
                  '‚û¢ –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.```*', inline=False)

        await channel.send(embed=history_embed)
        await channel.send(embed=embed)

    # –§–£–ù–ö–¶–ò–Ø, –∑–∞–ø–∏—Å—ã–≤–∞—é—â–∞—è –≤—Å–µ—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    @staticmethod
    async def write_db(guild):
        check_write_db = False
        for member in guild.members:
            user_id = f"{member.id}-{guild.id}"
            if not member.bot and not db_sess.query(User).filter(User.id == user_id).first():
                user = User()
                user.id = user_id
                user.name = '-1'
                user.nation = '-1'
                user.origin = '-1'
                user.balance = 0
                user.level = 1
                user.xp = 0
                user.skill_points = 0
                user.health = 5
                user.strength = 5
                user.intelligence = 5
                user.dexterity = 5
                user.speed = 5
                user.inventory = ''
                user.equipped_inventory = ''

                db_sess.add(user)
                check_write_db = True
        db_sess.commit()
        return check_write_db

    # –§–£–ù–ö–¶–ò–Ø, —É–¥–∞–ª—è—é—â–∞—è –≤—Å–µ—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    @staticmethod
    async def delete_db(guild):
        for member in guild.members:
            user = db_sess.query(User).filter(User.id == f"{member.id}-{guild.id}").first()
            if not member.bot and user:
                db_sess.delete(user)
        db_sess.commit()

    # –§–£–ù–ö–¶–ò–Ø, —Å–æ–∑–¥–∞—é—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    @staticmethod
    async def create_category(guild, title):
        return await guild.create_category(title)

    # –§–£–ù–ö–¶–ò–Ø, —Å–æ–∑–¥–∞—é—â–∞—è —á–∞—Ç—ã
    @staticmethod
    async def create_channel(guild, channel_info, category, title, roles_for_permss):
        kind, allow_messaging, pos = channel_info
        channel = None
        # –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞
        if not get(guild.channels, name=title):
            channel = await guild.create_text_channel(title, category=category, position=pos)
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É
            if kind != 'all':
                for _name, role in roles_for_permss.items():
                    await channel.set_permissions(
                        role,
                        send_messages=allow_messaging,
                        read_messages=kind == _name
                    )

        return channel

    # –ö–û–ú–ê–ù–î–ê, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—â–∞—è —Å–µ—Ä–≤–µ—Ä
    @commands.command()
    @commands.has_guild_permissions(administrator=True)
    async def implement(self, interaction: Interaction):
        await interaction.message.delete()
        guild = interaction.guild
        check_implement = False

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π
        for _name, color in GAME_ROLES_COLORS.items():
            if not get(guild.roles, name=_name):
                await guild.create_role(name=_name, color=color)
                await interaction.send(f":white_check_mark: *–†–æ–ª—å {_name} —Å–æ–∑–¥–∞–Ω–∞.*")
                check_implement = True

        roles_for_permss = {
            "non-game": guild.default_role,
            "game": get(guild.roles, name="–ò–≥—Ä–æ–∫"),
            "city_topolis": get(guild.roles, name="–¢–æ–ø–æ–ª–∏—Å"),
            "city_braifast": get(guild.roles, name="–ë—Ä–∞–∏—Ñ–∞—Å—Ç"),
            "city_jadiff": get(guild.roles, name="–î–∂–∞–¥–∏—Ñ—Ñ")
        }

        # –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–æ–≤ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        for category, channels in OBJECTS.items():
            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            category_object = get(guild.categories, name=category)
            if not category_object:
                category_object = await self.create_category(guild, category)
                check_implement = True
                await interaction.send(f":white_check_mark: *–ö–∞—Ç–µ–≥–æ—Ä–∏—è {category} —Å–æ–∑–¥–∞–Ω–∞.*")

            # –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–æ–≤
            for channel_name in channels.keys():
                channel = await self.create_channel(
                    guild,
                    channels[channel_name].values(),
                    category_object,
                    channel_name,
                    roles_for_permss
                )
                if channel:
                    check_implement = True
                    if channel.name == "üö™—Å–æ–∑–¥–∞–Ω–∏–µ-–ø–µ—Ä—Å–æ–Ω–∞–∂–∞":
                        await self.send_registration_msg(get(guild.channels, name="üö™—Å–æ–∑–¥–∞–Ω–∏–µ-–ø–µ—Ä—Å–æ–Ω–∞–∂–∞"))
                    if channel.name == "üìú–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
                        await self.send_information_msg(get(guild.channels, name="üìú–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"))
                    if channel.name == "üõí–º–∞–≥–∞–∑–∏–Ω":
                        pass

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é (—Å–¥–µ–ª–∞–Ω–æ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ /implement)
            for channel in channels.keys():
                await get(guild.channels, name=channel).edit(
                    category=category_object,
                    position=channels[channel]["position"]
                )

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏
        name_voice = "üé∂–ì–ª–∞–≤–Ω–∞—è —Ç–µ–º–∞"
        if not get(guild.voice_channels, name=name_voice):
            channel = await guild.create_voice_channel(name_voice,
                                                       category=get(guild.categories, name="–û–ë–©–ï–ï"), position=4)
            await channel.set_permissions(roles_for_permss["non-game"], speak=False, view_channel=False)
            await channel.set_permissions(roles_for_permss["game"], speak=False, view_channel=True)
            check_implement = True

        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if await self.write_db(guild):
            await interaction.send(":white_check_mark: *–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø–æ–ª–Ω–µ–Ω–∞.*")
            check_implement = True

        # –°–æ–∑–¥–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞
        await self.store_update(guild)

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–∞–Ω–∞–ª—É "üé∂–ì–ª–∞–≤–Ω–∞—è —Ç–µ–º–∞"
        await self.channel_connection()

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if check_implement:
            await interaction.send(":white_check_mark: **–ì–æ—Ç–æ–≤–æ!**")
        else:
            await interaction.send(":x: **–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —É–∂–µ –±—ã–ª–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞!**")

    # –ö–û–ú–ê–ù–î–ê, —É–¥–∞–ª—è—é—â–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Ä–≤–µ—Ä–∞
    @commands.command()
    @commands.has_guild_permissions(administrator=True)
    async def reset(self, interaction: Interaction):
        await interaction.message.delete()
        guild = interaction.guild

        # –£–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Ç–¥
        try:
            for category, channels in OBJECTS.items():
                await get(guild.categories, name=category).delete()
                for channel in channels.keys():
                    await get(guild.channels, name=channel).delete()
            for role in GAME_ROLES_COLORS:
                await get(guild.roles, name=role).delete()
        except AttributeError:
            pass

        await get(guild.voice_channels, name="üé∂–ì–ª–∞–≤–Ω–∞—è —Ç–µ–º–∞").delete()

        # –£–¥–∞–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        await self.delete_db(guild)

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        await interaction.send(":white_check_mark: **–ì–æ—Ç–æ–≤–æ!**")

    # –ö–û–ú–ê–ù–î–ê, —É–¥–∞–ª—è—é—â–∞—è –≤—Å–µ—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    @commands.command()
    @commands.has_guild_permissions(administrator=True)
    async def delete_users(self, interaction: Interaction):
        await interaction.message.delete()
        guild = interaction.guild
        chek_delete_db = False

        for member in guild.members:
            user = db_sess.query(User).filter(User.id == f"{member.id}-{guild.id}").first()
            if not member.bot and user:
                db_sess.delete(user)
                chek_delete_db = True
        db_sess.commit()

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if chek_delete_db:
            await interaction.send(":white_check_mark: **–ì–æ—Ç–æ–≤–æ!**")
        else:
            await interaction.send(":x: **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!**")


def setup(bot):
    bot.add_cog(ServerSetupCog(bot))
